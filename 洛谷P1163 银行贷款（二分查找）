#include<bits/stdc++.h> // 包含C++标准库的所有头文件
using namespace std; // 使用标准命名空间

int main() 
{
	int loan, pay, month; // 定义变量，分别表示贷款的原值、每月支付的分期付款金额和分期付款还清贷款所需的总月数
	double l = 0, r = 10, mid, t; // 定义变量，l和r分别表示二分查找的左右边界，mid表示中间值，t表示当前贷款余额

	cin >> loan >> pay >> month; // 输入贷款的原值、每月支付的分期付款金额和分期付款还清贷款所需的总月数

	// 使用二分查找算法来逼近月利率
	while (l < r) 
	{
		mid = (l + r) / 2; // 计算中间值
		if (r - l < 0.0001) // 如果左右边界之差小于0.0001，认为已经找到了足够精确的结果
		{
			break; // 跳出循环
		}
		t = loan; // 初始化当前贷款余额为贷款原值
		for (int i = 0; i < month; i++) // 模拟每个月的还款过程
		{ 
			t = t * (1 + mid) - pay; // 计算每个月后的贷款余额
		}
		if (t > 0) r = mid; // 如果最终贷款余额大于0，说明利率太低，需要增加利率
		else if (t < 0) l = mid; // 如果最终贷款余额小于0，说明利率太高，需要减少利率
		else // 如果最终贷款余额等于0，说明找到了精确的利率
		{ 
			printf("%.1f", mid * 100); // 输出月利率，四舍五入精确到0.1%，并乘以100转换为百分数
			return 0; // 结束程序
		}
	}
	printf("%.1f", mid * 100); // 如果循环结束还没有找到精确的利率，输出当前逼近的月利率，四舍五入精确到0.1%
	return 0; // 结束程序
}
