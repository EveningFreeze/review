#include<bits/stdc++.h>
using namespace std;
/*思路：（100分）        
---新增优化：减少b的值--- 
    >b在10^7到10^8之间时，位数是偶数位，不可能为回文数素数
    >除了11以外，一个数的位数是偶数的话，不可能为回文数素数。
    >如果一个回文素数的位数是偶数，则它的奇数位上的数字和与偶数位上的数字和必然相等；
    >根据数的整除性理论，容易判断这样的数肯定能被11整除，所以它就不可能是素数。
*/
int a,b;
//判断一个数是否是质数
bool isPrime(int x){
	if(x<=1) return false;
	for(int i=2;i<=sqrt(x);i++){
		if(x%i==0) return false;
	}
	return true;
}
//判断一个数是否是回文数
bool isHw(int x){
	int tmp=x;//记录x的值用于过程运算 
	int y=0;
	while(tmp){
		y=y*10+tmp%10;
		tmp/=10;
	}
	if(x==y) return true;
	else return false;
}
int main(){
	cin>>a>>b;
	b=min(b,9999999); //优化b的最大值 
	for(int i=a;i<=b;i++){
		if(isHw(i) && isPrime(i)){//优化的关键修改在这儿 
			cout<<i<<endl;
		}
	}
	return 0;
} 
