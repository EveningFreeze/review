#define  _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <cstring>//用于字符串操作strlen
using namespace std;
int main()
{
	int n = 0;
	cin >> n;
	cin.ignore();//忽略掉换行符
	char arr[100][101] = {0};//初始化二维数组，每行最多100个字符
	for (int i = 0; i < n; i++)
	{
		cin .getline(arr[i],101);//读取每一行字符串
   }
		//统计并输出每个字符串中的元音个数
		for (int i = 0; i <n; i++)
		{
			//统计每个元音的个数必须得在循环中定义初始化，因为每一次循环元音的统计都是从0开始的
        int counta = 0, counte = 0, counti = 0, counto = 0, countu = 0;
			for (int j = 0; j < strlen(arr[i]); j++)
			{
             switch (arr[i][j])
			 {
			case 'a':
			case 'A':
				counta++;
				break;
			case'e':
			case'E':
				counte++;
				break;
			case'i':
			case'I':
				counti++;
				break;
			case'o':
			case'O':
				counto++;
				break;
			case'u':
			case'U':
				countu++;
				break;

			 }
			
			
		}
			//输出结果
		cout << "a:" << counta << "\n";
		cout << "e:" << counte << "\n";
		cout << "i:" << counti << "\n";
		cout << "o:" << counto << "\n";
		cout << "u:" << countu << "\n";
		//如果不是最后一个测试实例，输出一个空行
		if (i<n-1)
		cout << "\n";
	}

	return 0;
}



//讲解答案
#include <cstdio>
#include <iostream>
#include <string>
using namespace std;

// 声明全局变量来计数每个元音的出现次数
string s; // 用于存储输入的字符串
int a, e, i, o, u; // 计数器，分别用于统计每个元音字母的出现次数

int main()
{
    int n; // 测试用例的数量

    // 读取测试用例的数量
    while (cin >> n) 
     {
        getchar(); // 消耗输入后的换行符

        // 循环处理每个测试用例
        for (int k = 1; k <= n; k++) 
         {
            getline(cin, s); // 读取整行输入
            int l = s.length(); // 获取输入字符串的长度

            // 循环遍历字符串中的每个字符
            for (int j = 0; j < l; j++)
             {
                if (s[j] == 'a')
                    a++; // 如果字符是'a'，则增加'a'的计数
                else if (s[j] == 'e')
                    e++; // 如果字符是'e'，则增加'e'的计数
                else if (s[j] == 'i')
                    i++; // 如果字符是'i'，则增加'i'的计数
                else if (s[j] == 'o')
                    o++; // 如果字符是'o'，则增加'o'的计数
                else if (s[j] == 'u')
                    u++; // 如果字符是'u'，则增加'u'的计数
            }

            // 输出每个元音字母的计数结果
            cout << "a:" << a << '\n';
            cout << "e:" << e << '\n';
            cout << "i:" << i << '\n';
            cout << "o:" << o << '\n';
            cout << "u:" << u << '\n';

            // 如果不是最后一个测试用例，输出一个空行
            if (k != n)
            {
                cout << '\n';
            }

            // 重置所有元音字母的计数器
            a = 0, e = 0, i = 0, o = 0, u = 0;
        }
    }
    return 0; // 程序结束
}
